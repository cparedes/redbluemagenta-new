---
title: What I'm reading, why I'm reading it, and opinions on its practical effects in my work life.
layout: post
published:false
categories:
---

So, for those who have known me for a while (and those who have read my resume :)), I've studied philosophy at the University of Washington (as well as math, but I won't be talking about math in this post.)  I've held the belief so far that philosophy is "useless" in the sense that there's no direct skills that someone could apply to their job.  However, philosophy is useful in another sense - not only does it help with critical reasoning skills, but it also has a few lessons that could be applied directly to whatever job one could have.

For instance (and this is an example drawn from my experiences so far as a sysadmin), we can denote systems and its components by a set of descriptions.  This works well - lots of methods in administrating large sites (with configuration management and the like) depend on denoting which system we're talking about by a set of descriptions.  However, there are several ways to which we can refer to a specific object in the world, and there's a narrow field in the philosophy of language that discusses such theories of reference.  For example, Russell describes a denoting phrase as a noun phrase with a predicate term that is satisfied by some particular; these phrases can be represented by a logical sentence in the predicate calculus.

Kripke has a different argument that could be seen as a criticism of the "descriptivist" view that Russell and Frege held: we can have a person, say "Aristotle," who could satisfy the descriptions, "the greatest student of Plato," "the founder of logic," etc. (Yes, these examples are pulled from Wikipedia.)  However, it is *not necessarily true* that if Aristotle existed, then he fit any of those descriptions.  (Kripke developed the idea of "rigid designators," names which refer to the same exact individual in every possible world that that indivdiual exists.  I could, for instance, be described as being a sysadmin in this world in which we occupy, I could also be described as being a grocer in some other world (whether it be an actual physical world, or an imagined world.)  No matter, "Ian Paredes" refers to me, the individual, and that name doesn't refer to anyone else who happens to fit the exact bundle of descriptions that could also possibly describe me.

In terms of what this means in system adminstration: I've seen debates between using hostnames or metadata as the principal way of referring to machines, and having both sides of the debate throwing crap at each other trying to argue which one's more "right" than the other.  I've also seen debates about the merits of using particular virtualized/physical machines or just having a pile of machines in the cloud (assuming all things are equal in terms of performance and whatnot.)  However, the debate is squarely within the realm of this narrow field in the philosophy of language!  When we are concerned with particular machines (and yes, when you're working with physical hardware, you ought to know which machine is which), when we have to worry about them breaking down and potentially taking down our services, we tend to see references along the lines of rigid designators.  We *want* to know if it's cthulu that's causing our issues (the old Dell PE system sitting on the bottom of rack 10), or if it's fsm, the newer SuperMicro system on the top of rack 1.  When we are adopting a more descriptivist philosophy, we tend to use metadata and not care about the proper names of machines, because anything that fits the sentence is *probably* the machine we want.